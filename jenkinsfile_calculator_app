pipeline{
   agent any
   options {
     buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '5', numToKeepStr: '2')
   }

   stages{
      stage('git checkout'){
         steps{
            checkout scmGit(branches: [[name: '*/main']], 
            extensions: [], 
            userRemoteConfigs: [[url: 'https://github.com/Kavana1997/calculator_app1_itd.git']])
         }
      }
      
      stage("unit test"){
         steps{
            sh '''
            cd ./calculator_app
            mvn test
            '''
         }
      }

      stage('integration test'){
         steps{
            dir('./calculator_app'){
               sh 'mvn integration-test'           
            }
         }
      }

      stage('load testing'){
         steps{
            catchError(buildResult: 'FAILURE', stageResult: 'SUCCESS'){
            dir('./calculator_app'){
            sh 'mvn clean verify'
            }
            }
         }
      }
      stage('deploy tomcat10'){
         input{
            message "are you trying to deploy tomcat"
               parameters{
                     choice choices: ['YES', 'NO'], description: 'choose yes or no for deployment', name: 'CHOOSE_DEPOY'   
               }    
         }
         steps{
            script{
               if(CHOOSE_DEPOY == 'YES'){
               deploy adapters: [tomcat9(credentialsId:'tomcat_kavana',url: 'http://15.207.249.42:8080/', path: '')],
                              contextPath:'/calculator',
                              war: 'calculator_app/target/calculator.war'
               }
               else{
                  echo "code is not correct so we can't go for deployment"
               }
            }

         }
      }
   }
}
